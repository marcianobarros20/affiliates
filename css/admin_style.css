.charttree{
    overflow-x: scroll;
    width: 100%;
    min-height: 825px;
    
}

.charttree.frontchart{
    min-height: auto;
}

/*#region Organizational Chart*/
.tree * {
    margin: 0; padding: 0;
}
.tree{
    display: inline-block;
    width: 3000px;
}
.tree ul {
    padding-top: 20px; position: relative;
    -transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
    display: block;
    list-style-type: none;
}

.tree li {
    float: left; text-align: center;
    list-style-type: none;
    position: relative;
    padding: 20px 5px 0 5px;

    -transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.tree li::before, .tree li::after{
    content: '';
    position: absolute; top: 0; right: 50%;
    border-top: 2px solid #696969;
    width: 50%; height: 20px;
}
.tree li::after{
    right: auto; left: 50%;
    border-left: 2px solid #696969;
}

/*We need to remove left-right connectors from elements without 
any siblings*/
.tree li:only-child::after, .tree li:only-child::before {
    display: none;
}

/*Remove space from the top of single children*/
.tree li:only-child{ padding-top: 0;}

/*Remove left connector from first child and 
right connector from last child*/
.tree li:first-child::before, .tree li:last-child::after{
    border: 0 none;
}
/*Adding back the vertical connector to the last nodes*/
.tree li:last-child::before{
    border-right: 2px solid #696969;
    border-radius: 0 5px 0 0;
    -webkit-border-radius: 0 5px 0 0;
    -moz-border-radius: 0 5px 0 0;
}
.tree li:first-child::after{
    border-radius: 5px 0 0 0;
    -webkit-border-radius: 5px 0 0 0;
    -moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/
.tree ul ul::before{
    content: '';
    position: absolute; top: 0; left: 50%;
    border-left: 2px solid #696969;
    width: 0; height: 20px;
}

.tree li div.tree_elem{
    width: 100px;
    padding: 10px;
    text-decoration: none;
    background-color: white;
    color: #8b8b8b;
    font-family: arial, verdana, tahoma;
    display: inline-block;
    box-shadow: 0 1px 2px rgba(0,0,0,0.1);
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

.tree li div.tree_elem a{
    display: inline-block;
    font-size: 16px;
    color: #333;
    transition: 0.5s;
}

.downstream{
    float: right;
}

.info{
    float: left;
}


/*Connector styles on hover*/
.tree li a:hover+ul li::after, 
.tree li a:hover+ul li::before, 
.tree li a:hover+ul::before, 
.tree li a:hover+ul ul::before{
    border-color:  #94a0b4;
}
/*#endregion*/

.tree li li li a , .tree li li li div.tree_elem{
    width: auto;
    width: 100px;
}

.tree > ul > li > a {
    width: auto;
    width: 100px;
}


.tree > ul > li > ul > li > a {
    width: auto;
}

.tree ul ul ul{
    display: none;
    /*opacity: 0;
    visibility: hidden;
    -transition: all 0.2s;
    -webkit-transition: all 0.2s;
    -moz-transition: all 0.2s;*/
}

.tree ul ul ul.open{
    display: block;
    /*opacity: 1;
    visibility: visible;*/
}

.tree > ul > li > .tree_elem{
    background: #3c8dbc;
    color: #fff;
}

a.upstream{
    -webkit-transform: rotate(180deg);
    -moz-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    -o-transform: rotate(180deg);
    transform: rotate(180deg);
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
}


